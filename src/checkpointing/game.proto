syntax = "proto2";

// Object
message Door_{
    required int32 locked = 1;
    required int32 room_id = 2;
}

message Object_Union_{
    optional Door_ dr = 1;
    // Still unfinished in game_state, will add later
}

message Tagged_Object_{
    enum Object_Type_t{
        DOOR = 1;
        // Will add type once game state add theirs
    } 
    required Object_Union_ t = 1; 
}

message Object_{
    required string object_id = 1;
    optional string short_des = 2;
    optional string long_des = 3;
    required Tagged_Object_ object_type = 4;
    optional int32 can_take = 5;
    optional int32 condition = 6;
}





//Room

message Condition_{
    optional int32 object_id = 1;
    optional string attribute = 2;
    optional int32 attribute_value = 3;
}
    
message Path_{
    required string room_id = 1;
    repeated Condition_ conditions = 2; //Array of all conditions in the path
        
}

message Room_{
    required string room_id = 1;
    optional string short_desc = 2;
    optional string long_desc = 3; 
    repeated string all_objects_t = 4; //Array of all object ids in room
    repeated Path_ paths = 5; //Array of all paths (submessage)
}




//Player

message Player_{
    required int32 player_id = 1;
    optional string username = 2;
    optional int32 level = 3;
    optional int32 xp = 4;
    repeated string inventory = 5; //Array of all object ids in inventory
    repeated string clothes = 6; //Array of all object ids worn by player
}   
    


//Game

message Game_{
    repeated Player_ all_players = 1; //Array of all players (submessage)
    repeated Room_ all_rooms = 2; //Array of all rooms (submessage)
    optional string curr_room = 3; //ID of current room
    optional int32 time_start = 4;

}

